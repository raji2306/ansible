---
# tasks file for ec2

- name: Show aws_instance_type from Semaphore
  debug:
    var: aws_instance_type
    
- name: Launch EC2 instance
  amazon.aws.ec2_instance:
    name: "{{ aws_tag_name }}"
    key_name: "{{ aws_key_name }}"
    instance_type: "{{ aws_instance_type }}"
    image_id: "{{ aws_image_id }}"
    region: "{{ aws_region }}"
    security_group: "{{ aws_security_group }}"
    wait: yes
    count: 1
    tags:
      Name: "{{ aws_tag_name }}"
  register: ec2_result

- name: Debug EC2 result (optional, for troubleshooting)
  debug:
    var: ec2_result

- name: Add new instance to host group
  add_host:
    hostname: "{{ item.public_ip_address }}"
    groupname: launched
  loop: "{{ ec2_result.instances }}"
  when: ec2_result.instances is defined

- name: Wait for SSH to come up
  wait_for:
    host: "{{ item.public_ip_address }}"
    port: 22
    delay: 10
    timeout: 300
    state: started
  loop: "{{ ec2_result.instances }}"
  when: ec2_result.instances is defined

- name: Install NGINX
  become: yes
  delegate_to: "{{ item.public_ip_address }}"
  vars:
    ansible_user: ubuntu
  loop: "{{ ec2_result.instances }}"
  loop_control:
    label: "{{ item.public_ip_address }}"
  when: ec2_result.instances is defined
  ansible.builtin.package:
    name: "{{ nginx_package }}"
    state: present

- name: Start and enable NGINX
  become: yes
  delegate_to: "{{ item.public_ip_address }}"
  vars:
    ansible_user: ubuntu
  loop: "{{ ec2_result.instances }}"
  loop_control:
    label: "{{ item.public_ip_address }}"
  when: ec2_result.instances is defined
  ansible.builtin.service:
    name: "{{ nginx_package }}"
    state: started
    enabled: yes
